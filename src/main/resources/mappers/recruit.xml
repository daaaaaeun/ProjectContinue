<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="recruit">
    <!-- 목록 출력 -->
    <select id="list" resultType="com.cafe24.nonchrono.dto.RecruitDTO">
        SELECT rb.rcrbrd_num,
               rb.mem_id,
               rb.rcrbrd_subject,
               rb.rcrbrd_edate,
               rb.rcrbrd_max,
               gm.gm_name,
               (SELECT count(*) FROM tb_comment where rcrbrd_num = rb.rcrbrd_num) as com_count, /* 댓글 수 */
               (SELECT count(mem_id)
                FROM tb_recruitinfo
                where rcrbrd_num = rb.rcrbrd_num)                                 as cnt /* 참여자 수 */
        FROM tb_rcrboard rb
        LEFT JOIN tb_game gm ON rb.gm_code = gm.gm_code
        WHERE rcrbrd_status = '진행중' AND rcrbrd_edate >= now()
        ORDER BY ${order} DESC
        Limit 9
    </select>

    <!-- 키워드가 있을시 목록 출력 -->
    <select id="list2" parameterType="java.util.Map" resultType="com.cafe24.nonchrono.dto.RecruitDTO">
        SELECT rb.rcrbrd_num,
               rb.mem_id,
               rb.rcrbrd_subject,
               rb.rcrbrd_edate,
               rb.rcrbrd_max,
               gm.gm_name,
               (SELECT count(*) FROM tb_comment where rcrbrd_num = rb.rcrbrd_num) as com_count, /* 댓글 수 */
               (SELECT count(mem_id)
                FROM tb_recruitinfo
                where rcrbrd_num = rb.rcrbrd_num)                                 as cnt /* 참여자 수 */
        FROM tb_rcrboard rb
                 JOIN tb_game gm
                      ON rb.gm_code = gm.gm_code
        WHERE rcrbrd_status = '진행중'
          AND rcrbrd_edate >= now()
          AND gm.gm_name LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY ${order} DESC
        Limit 9
    </select>

    <!-- 정렬시 목록 출력 -->
    <select id="listAjax" resultType="com.cafe24.nonchrono.dto.MoreDTO">
        SELECT gm.gm_name,
               rb.rcrbrd_num,
               rb.rcrbrd_subject,
               rb.rcrbrd_edate,
               rb.gm_code,
               rb.rcrbrd_max,
               (SELECT count(*) FROM tb_comment where rcrbrd_num = rb.rcrbrd_num) as com_count,
               (SELECT count(mem_id)
                FROM tb_recruitinfo
                WHERE rcrbrd_num = rb.rcrbrd_num)                                 as cnt
        FROM tb_rcrboard rb
        LEFT JOIN tb_game gm ON rb.gm_code = gm.gm_code
        WHERE rcrbrd_status = '진행중' AND rcrbrd_edate >= now()
        ORDER BY ${order} DESC
        Limit 9
    </select>

    <!-- 품목 코드에 맞는 품목명 가져오기 -->
    <select id="game" resultType="String">
        select gm.gm_name
        from tb_rcrboard as rb
                 join tb_game as gm
                      on rb.gm_code = gm.gm_code
        where rb.rcrbrd_num = #{rcrbrd_num}
    </select>

    <!-- 품목 테이블의 품목 코드와 품목명 가져오기 -->
    <select id="gm_list" resultType="com.cafe24.nonchrono.dto.GameDTO">
        SELECT gm_name, gm_code
        FROM tb_game
    </select>

    <!-- 품목명에 맞는 품목 코드 가져오기 -->
    <select id="gm_list2" parameterType="String" resultType="String">
        SELECT gm_code
        FROM tb_game
        WHERE gm_name = #{gm_name}
    </select>

    <resultMap id="rcrBoardMap" type="com.cafe24.nonchrono.dto.RecruitDTO">
        <id column="rcrbrd_num" property="rcrbrd_num"/>
        <result column="mem_id" property="mem_id"/>
        <result column="rcrbrd_subject" property="rcrbrd_subject"/>
        <result column="rcrbrd_content" property="rcrbrd_content"/>
        <result column="rcrbrd_pw" property="rcrbrd_pw"/>
        <result column="rcrbrd_views" property="rcrbrd_views"/>
        <result column="rcrbrd_date" property="rcrbrd_date"/>
        <result column="rcrbrd_edate" property="rcrbrd_edate"/>
        <result column="rcrbrd_ip" property="rcrbrd_ip"/>
        <result column="gm_code" property="gm_code"/>
        <result column="rcrbrd_status" property="rcrbrd_status"/>
        <result column="rcrbrd_adr" property="rcrbrd_adr"/>
        <result column="rcrbrd_max" property="rcrbrd_max"/>
    </resultMap>

    <resultMap id="gameMap" type="com.cafe24.nonchrono.dto.GameDTO">
        <id column="gm_code" property="gm_code"/>
        <result column="gm_name" property="gm_name"/>
        <result column="gm_price" property="gm_price"/>
        <result column="gm_level" property="gm_level"/>
        <result column="gm_category" property="gm_category"/>
        <result column="gm_img" property="gm_img"/>
    </resultMap>

    <resultMap id="memberMap" type="com.cafe24.nonchrono.dto.MemDTO">
        <id column="mem_id" property="mem_id"/>
        <result column="mem_pw" property="mem_pw"/>
        <result column="mem_nick" property="mem_nick"/>
        <result column="mem_name" property="mem_name"/>
        <result column="mem_zip" property="mem_zip"/>
        <result column="mem_adr1" property="mem_adr1"/>
        <result column="mem_adr2" property="mem_adr2"/>
        <result column="mem_phone" property="mem_phone"/>
        <result column="mem_birth" property="mem_birth"/>
        <result column="mem_grade" property="mem_grade"/>
        <result column="upoint" property="upoint"/>
        <result column="apoint" property="apoint"/>
        <result column="mem_receive" property="mem_receive"/>
        <result column="good" property="good"/>
        <result column="buyer_bad" property="buyer_bad"/>
        <result column="mem_pic" property="mem_pic"/>
    </resultMap>

    <resultMap id="detailMap" type="java.util.HashMap">
        <result column="detailCnt" property="cnt"/>
        <association property="rcrBoard" resultMap="rcrBoardMap"/>
        <association property="game" resultMap="gameMap"/>
        <association property="member" resultMap="memberMap"/>
    </resultMap>

    <!-- 게시판 번호에 맞는 상세 정보 가져오기 (모집 상세, 게임, 모집장 상세 정보) -->
    <select id="detail" parameterType="int" resultMap="detailMap">
        SELECT rb.rcrbrd_num, rb.mem_id, rb.rcrbrd_subject, rb.rcrbrd_content, rb.rcrbrd_pw, rb.rcrbrd_views, rb.rcrbrd_date, rb.rcrbrd_edate, rb.rcrbrd_ip, rb.gm_code, rb.rcrbrd_status, rb.rcrbrd_adr, rb.rcrbrd_max,
               gm.gm_name, gm.gm_price, gm.gm_level, gm.gm_category, gm.gm_img,
               mm.mem_pw, mm.mem_nick, mm.mem_name, mm.mem_zip, mm.mem_adr1, mm.mem_adr2, mm.mem_phone, mm.mem_birth, mm.mem_grade, mm.upoint, mm.apoint, mm.mem_receive, mm.good, mm.buyer_bad, mm.mem_pic,
               (SELECT COUNT(*)
                FROM tb_rcrboard
                group by mem_id
                having mem_id = rb.mem_id) as detailCnt
        FROM tb_rcrboard rb
        INNER JOIN tb_game gm ON rb.gm_code = gm.gm_code
        INNER JOIN tb_mem mm ON rb.mem_id = mm.mem_id
        WHERE rcrbrd_num = #{rcrbrd_num}
    </select>

    <!-- 게시판 번호에 맞는 좌석 정보 가져오기 (좌석, 회원, 역할) / 역할이 지정되지 않는 이상 검색되지 않으므로 폐기 -->
    <!--<select id="seatDetail" parameterType="int" resultType="java.util.LinkedHashMap">
        SELECT rs.rl_name, rs.rs_seat,
        CASE WHEN ri.ri_seat = rs.rs_seat THEN ri.mem_id ELSE '' END AS mem_id,
        CASE WHEN ri.ri_seat = rs.rs_seat THEN mm.mem_nick ELSE '' END AS mem_nick,
        CASE WHEN ri.ri_seat = rs.rs_seat THEN mm.mem_pic ELSE '' END AS mem_pic
        FROM tb_roleseat rs
        LEFT JOIN tb_recruitinfo ri ON ri.rcrbrd_num = rs.rcrbrd_num AND ri.ri_seat = rs.rs_seat
        LEFT JOIN tb_mem mm ON ri.mem_id = mm.mem_id
        WHERE rs.rcrbrd_num = #{rcrbrd_num}
    </select>-->

    <!-- 좌석 번호에 맞는 좌석 정보 가져오기 (아이디, 닉네임, 프로필) -->
    <select id="seatDetail" parameterType="int" resultType="java.util.LinkedHashMap">
        SELECT ri.ri_seat, ri.mem_id, mm.mem_nick, mm.mem_pic
        FROM tb_recruitinfo ri
        INNER JOIN tb_mem mm on ri.mem_id = mm.mem_id
        WHERE ri.rcrbrd_num = #{rcrbrd_num}
        ORDER BY ri_seat
    </select>

    <!-- 멤버 아이디로 닉네임 가져오기 -->
    <select id="nickname" parameterType="String" resultType="String">
        SELECT mem_nick
        FROM tb_mem
        WHERE mem_id = #{mem_id}
    </select>

    <!-- 모집 게시판 글 등록하기 -->
    <insert id="insert" parameterType="com.cafe24.nonchrono.dto.RecruitDTO">
        INSERT INTO tb_rcrboard (mem_id, rcrbrd_subject, rcrbrd_content, rcrbrd_pw, rcrbrd_views, rcrbrd_date,
                                 rcrbrd_edate, rcrbrd_ip, gm_code, rcrbrd_status, rcrbrd_adr, rcrbrd_max)
        VALUES (#{mem_id}, #{rcrbrd_subject}, #{rcrbrd_content}, #{rcrbrd_pw}, #{rcrbrd_views}, now(), #{rcrbrd_edate},
                #{rcrbrd_ip}, #{gm_code}, #{rcrbrd_status}, #{rcrbrd_adr}, #{rcrbrd_max})
    </insert>

    <!-- 참가 신청 전 체크 과정 -->
    <select id="attendCheck" parameterType="java.util.Map" resultType="Integer">
        SELECT ri_seat
        FROM tb_recruitinfo
        WHERE rcrbrd_num = #{rcrbrd_num}
          AND mem_id = #{mem_id}
    </select>

    <!-- 모집 상세에서 참가 신청 -->
    <insert id="attend" parameterType="com.cafe24.nonchrono.dto.RecruitInfoDTO">
        INSERT INTO tb_recruitinfo (mem_id, rcrbrd_num, ri_seat)
        VALUES (#{mem_id}, #{rcrbrd_num}, #{ri_seat})
    </insert>

    <!-- 역할 등록 -->
    <insert id="roleInsert" parameterType="com.cafe24.nonchrono.dto.RoleDTO">
        INSERT INTO tb_role (rl_name, rcrbrd_num)
        VALUES (#{rl_name}, #{rcrbrd_num})
    </insert>

    <!-- 부모 게시글 번호 찾아오기 -->
    <select id="numSearch" resultType="int">
        SELECT MAX(rcrbrd_num)
        FROM tb_rcrboard
    </select>

    <!-- 역할 테이블에서 내용 가져오기 -->
    <select id="roleList" parameterType="int" resultType="com.cafe24.nonchrono.dto.RoleDTO">
        SELECT rl_name
        FROM tb_role
        WHERE rcrbrd_num = #{rcrbrd_num}
    </select>

    <!-- 인덱스 페이지 월간 타이틀 순위 모집순 -->
    <select id="idxRankingRecruit" resultType="com.cafe24.nonchrono.dto.GameDTO">
        select tg.gm_code, tg.gm_name, count(*) as cnt
        from tb_rcrboard rb join tb_recruitinfo ri
                                 on rb.rcrbrd_num = ri.rcrbrd_num join tb_game tg on rb.gm_code = tg.gm_code
        where date_format(rcrbrd_date, '%Y-%m') = date_format(now(), '%Y-%m')
        group by tg.gm_name
        order by cnt desc
        limit 10
    </select>

    <!-- 인덱스 페이지 모집 현황 -->
    <select id="idxrcrbrdlist" resultType="com.cafe24.nonchrono.dto.RecruitDTO">
        select rcrbrd_num, rcrbrd_subject, rcrbrd_edate, gm_code
        from tb_rcrboard
        where rcrbrd_status not in ('모집완료')
        order by rcrbrd_edate
    </select>

    <!-- 인덱스 페이지 모집 현황 참여 인원수 -->
    <select id="idxrcrbrdCount" parameterType="int" resultType="int">
        select count(ri.rcrbrd_num)
        from tb_recruitinfo ri
                 right join tb_rcrboard rb
                            on ri.rcrbrd_num = rb.rcrbrd_num
        where rb.rcrbrd_num = #{rcrbrd_num}
    </select>

    <!-- 모집 역할 부여 -->
    <insert id="roleConfirm" parameterType="com.cafe24.nonchrono.dto.RoleSeatDTO">
        INSERT INTO tb_roleseat (rl_name, rcrbrd_num, rs_seat)
        VALUES (#{rl_name}, #{rcrbrd_num}, #{rs_seat})
    </insert>

    <!-- 자리당 역할 이름 조회 -->
    <select id="roleName" parameterType="int" resultType="com.cafe24.nonchrono.dto.RoleSeatDTO">
        SELECT rl_name, rs_seat
        FROM tb_roleseat
        WHERE rcrbrd_num = #{rcrbrd_num}
    </select>

    <!-- 게시판 번호와 좌석 번호로 데이터가 존재하는지 확인 -->
    <select id="roleSeatCheck" parameterType="com.cafe24.nonchrono.dto.RoleSeatDTO" resultType="String">
        SELECT rs_seat
        FROM tb_roleseat
        WHERE rcrbrd_num = #{rcrbrd_num}
          AND rs_seat = #{rs_seat}
    </select>

    <!-- 해당 게시물에 모집 최대 인원 조회 -->
    <select id="rcrbrdMax" parameterType="int" resultType="int">
        SELECT rcrbrd_max
        FROM tb_rcrboard
        WHERE rcrbrd_num = #{rcrbrd}
    </select>

    <!-- 이번달 모집왕 -->
    <select id="rcrKing" resultType="java.util.Map">
        SELECT mm.mem_nick, mm.mem_id, count(*) as cnt
        FROM tb_mem as mm JOIN tb_rcrboard as rb
                               on mm.mem_id = rb.mem_id
        where DATE_FORMAT(rb.rcrbrd_date, '%Y-%m') = DATE_FORMAT(now(), '%Y-%m')
        group by rb.mem_id
        order by count(*) DESC
        Limit 5
    </select>

    <!-- 더보기 -->
    <select id="more" parameterType="java.util.Map" resultType="com.cafe24.nonchrono.dto.MoreDTO">
        select gm.gm_name,
               rb.rcrbrd_num,
               rb.rcrbrd_subject,
               rb.rcrbrd_edate,
               rb.gm_code,
               rb.rcrbrd_max,
               (SELECT count(*) FROM tb_comment where rcrbrd_num = rb.rcrbrd_num) as com_count,
               (SELECT count(mem_id)
                FROM tb_recruitinfo
                WHERE rcrbrd_num = rb.rcrbrd_num)                                 as cnt
        from tb_rcrboard as rb
                 join tb_game as gm
                      on rb.gm_code = gm.gm_code
        WHERE rcrbrd_status = '진행중'
          AND rcrbrd_edate >= now()
        ORDER BY ${order} DESC
        Limit 9 OFFSET #{startCount}
    </select>

    <!-- 키워드가 있을 경우 더보기 기능 -->
    <select id="more2" parameterType="java.util.Map" resultType="com.cafe24.nonchrono.dto.MoreDTO">
        select gm.gm_name,
               rb.rcrbrd_num,
               rb.rcrbrd_subject,
               rb.rcrbrd_edate,
               rb.gm_code,
               rb.rcrbrd_max,
               (SELECT count(*) FROM tb_comment where rcrbrd_num = rb.rcrbrd_num) as com_count,
               (SELECT count(mem_id)
                FROM tb_recruitinfo
                WHERE rcrbrd_num = rb.rcrbrd_num)                                 as cnt
        from tb_rcrboard as rb
                 join tb_game as gm
                      on rb.gm_code = gm.gm_code
        WHERE rcrbrd_status = '진행중'
          AND rcrbrd_edate >= now()
          AND gm.gm_name like concat('%', #{keyword}, '%')
        ORDER BY ${order} DESC
        Limit #{endCount} OFFSET #{startCount}
    </select>

    <!-- 모집 삭제 -->
    <delete id="delete" parameterType="int">
        DELETE
        FROM tb_rcrboard
        WHERE rcrbrd_num = #{rcrbrd_num}
    </delete>

    <!-- 역할 삭제 -->
    <delete id="deleteRole" parameterType="int">
        DELETE
        FROM tb_role
        WHERE rcrbrd_num = #{rcrbrd_num}
    </delete>

    <!-- 역할이 자리에 부여된 기록 삭제 -->
    <delete id="deleteRoleSeat" parameterType="int">
        DELETE
        FROM tb_roleseat
        WHERE rcrbrd_num = #{rcrbrd_num}
    </delete>

    <!-- 자리에 참가한 기록 삭제 -->
    <delete id="deleteRecruit" parameterType="int">
        DELETE
        FROM tb_recruitinfo
        WHERE rcrbrd_num = #{rcrbrd_num}
    </delete>

    <!-- 모집 완료 전환시 기록 -->
    <update id="status" parameterType="int">
        UPDATE tb_rcrboard
        SET rcrbrd_status = '모집완료'
        WHERE rcrbrd_num = #{rcrbrd_num}
    </update>

    <!-- 조회수 -->
    <update id="views" parameterType="int">
        UPDATE tb_rcrboard
        SET rcrbrd_views = rcrbrd_views + 1
        WHERE rcrbrd_num = #{rcrbrd_num}
    </update>

    <insert id="search" parameterType="String">
        INSERT INTO tb_search (sc_word, sc_date, sc_where)
        VALUES (#{sc_word}, now(), '모집')
    </insert>

    <select id="heartCheck" parameterType="com.cafe24.nonchrono.dto.RatingDTO" resultType="int">
        SELECT count(*)
        FROM tb_rating
        WHERE rcrbrd_num = #{rcrbrd_num}
          AND give_id = #{give_id}
          AND receive_id = #{receive_id}
    </select>

    <!-- 좋아요 -->
    <insert id="heart" parameterType="com.cafe24.nonchrono.dto.RatingDTO">
        INSERT INTO tb_rating (rcrbrd_num, give_id, receive_id, rt_content, rt_goodbad)
        VALUES (#{rcrbrd_num}, #{give_id}, #{receive_id}, #{rt_content}, #{rt_goodbad})
    </insert>

    <!-- 좋아요 취소 -->
    <delete id="heartDelete" parameterType="com.cafe24.nonchrono.dto.RatingDTO">
        DELETE
        FROM tb_rating
        WHERE rcrbrd_num = #{rcrbrd_num}
          AND give_id = #{give_id}
          AND receive_id = #{receive_id}
    </delete>

    <!-- 댓글 작성 -->
    <insert id="comment" parameterType="com.cafe24.nonchrono.dto.CommentDTO">
        INSERT INTO tb_comment (rcrbrd_num, mem_id, com_content, com_date, com_grpno, com_indent, com_ansnum)
        VALUES (#{rcrbrd_num}, #{mem_id}, #{com_content}, now(), #{com_grpno}, #{com_indent}, #{com_ansnum})
    </insert>

    <!-- 좋아요 누를시 good + 1 -->
    <update id="good" parameterType="String">
        UPDATE tb_mem
        SET good = good + 1
        WHERE mem_id = #{mem_id}
    </update>

    <!-- 신고시 buyer_bad + 1 -->
    <update id="buyer_bad" parameterType="String">
        UPDATE tb_mem
        SET buyer_bad = buyer_bad + 1
        WHERE mem_id = #{mem_id}
    </update>

    <!-- 키워드가 있을시 정렬하여 목록 보기 -->
    <select id="listAjax2" resultType="com.cafe24.nonchrono.dto.MoreDTO">
        SELECT gm.gm_name,
               rb.rcrbrd_num,
               rb.rcrbrd_subject,
               rb.rcrbrd_edate,
               rb.gm_code,
               rb.rcrbrd_max,
               (SELECT count(*) FROM tb_comment where rcrbrd_num = rb.rcrbrd_num) as com_count,
               (SELECT count(mem_id)
                FROM tb_recruitinfo
                WHERE rcrbrd_num = rb.rcrbrd_num)                                 as count
        FROM tb_rcrboard rb
                 join tb_game gm
                      ON rb.gm_code = gm.gm_code
        WHERE rcrbrd_status = '진행중'
          AND rcrbrd_edate >= now()
          AND gm.gm_name LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY ${order} DESC
        Limit 9
    </select>

    <!-- 검색시 검색 테이블에 기록 -->
    <insert id="searchInsert" parameterType="String">
        INSERT INTO tb_search (sc_word, sc_date, sc_where)
        VALUES (#{keyword}, now(), '모집')
    </insert>

    <!-- 검색어 랭킹 -->
    <select id="searchRank" resultType="String">
        SELECT sc_word
        FROM tb_search
        WHERE sc_where = '모집'
        GROUP BY sc_word
        ORDER BY count(sc_word) DESC
        LIMIT 5
    </select>

    <!-- 등록시 마일리지 소모 -->
    <update id="useMileage" parameterType="java.util.Map">
        UPDATE tb_mem
        SET upoint = upoint - #{mileage}
        WHERE mem_id = #{mem_id}
    </update>

    <!-- 가용 마일리지 검색 -->
    <select id="mileageCheck" parameterType="String" resultType="int">
        SELECT upoint
        FROM tb_mem
        WHERE mem_id = #{mem_id}
    </select>

    <!-- 댓글 목록 검색 -->
    <select id="commentList" parameterType="int" resultType="java.util.Map">
        SELECT mm.mem_pic,
               mm.mem_nick,
               com_num,
               rcrbrd_num,
               ct.mem_id,
               com_content,
               date_format(com_date, '%Y-%m-%d %H:%i:%s') as comdate,
               com_grpno,
               com_indent,
               com_ansnum
        FROM tb_comment ct
                 JOIN tb_mem mm
                      ON ct.mem_id = mm.mem_id
        WHERE rcrbrd_num = #{rcrbrd_num}
    </select>

    <delete id="commentDelete" parameterType="int">
        DELETE
        FROM tb_comment
        WHERE com_num = #{com_num}
    </delete>

    <update id="commentUpdate" parameterType="com.cafe24.nonchrono.dto.CommentDTO">
        UPDATE tb_comment
        SET com_content = #{com_content}
        WHERE com_num = #{com_num}
    </update>

    <update id="open" parameterType="int">
        UPDATE tb_rcrboard
        SET rcrbrd_status = '진행중'
        WHERE rcrbrd_num = #{rcrbrd_num}
    </update>

</mapper>
